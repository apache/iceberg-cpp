# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Test

on:
  push:
    branches:
      - '**'
      - '!dependabot/**'
    tags:
      - '**'
  pull_request:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  ICEBERG_HOME: /tmp/iceberg

jobs:
  ubuntu:
    name: AMD64 Ubuntu 24.04
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
    steps:
      - name: Checkout iceberg-cpp
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Install dependencies
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev
      - name: Build Iceberg
        shell: bash
        run: ci/scripts/build_iceberg.sh $(pwd)
      - name: Build Example
        shell: bash
        run: ci/scripts/build_example.sh $(pwd)/example
  macos:
    name: AArch64 macOS 26
    runs-on: macos-26
    timeout-minutes: 30
    strategy:
      fail-fast: false
    steps:
      - name: Checkout iceberg-cpp
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Build Iceberg
        shell: bash
        run: ci/scripts/build_iceberg.sh $(pwd)
      - name: Build Example
        shell: bash
        run: ci/scripts/build_example.sh $(pwd)/example
  windows:
    name: AMD64 Windows 2022
    runs-on: windows-2022
    timeout-minutes: 30
    strategy:
      fail-fast: false
    steps:
      - name: Checkout iceberg-cpp
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Install dependencies
        shell: cmd
        run: |
          vcpkg install zlib:x64-windows nlohmann-json:x64-windows nanoarrow:x64-windows roaring:x64-windows cpr:x64-windows
      - name: Build Iceberg
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          bash -c "ci/scripts/build_iceberg.sh $(pwd)"
      - name: Build Example
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          bash -c "ci/scripts/build_example.sh $(pwd)/example"
  meson:
    name: Meson - ${{ matrix.title }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - title: AMD64 Ubuntu 24.04
            runs-on: ubuntu-24.04
          - title: AMD64 Windows 2025
            runs-on: windows-2025
            meson-setup-args: --vsenv
          - title: AArch64 macOS 26
            runs-on: macos-26
    steps:
      - uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      - name: Checkout iceberg-cpp
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Install build dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
      - name: Build Iceberg
        run: |
          meson setup builddir ${{ matrix.meson-setup-args || '' }}
          meson compile -C builddir
      - name: Test Iceberg
        run: |
          meson test -C builddir
