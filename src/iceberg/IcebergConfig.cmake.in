# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# This config sets the following variables in your project::
#
#   Iceberg_FOUND - true if Iceberg found on the system
#   Iceberg_VERSION - version of the found Iceberg
#
# This config sets the following targets (if built) in your project::
#
#   Iceberg::iceberg_shared
#   Iceberg::iceberg_static
#   Iceberg::iceberg_puffin_shared
#   Iceberg::iceberg_puffin_static
#   Iceberg::iceberg_arrow_shared
#   Iceberg::iceberg_arrow_static

@PACKAGE_INIT@

set(ICEBERG_BUILD_STATIC "@ICEBERG_BUILD_STATIC@")
set(ICEBERG_SYSTEM_DEPENDENCIES "@ICEBERG_SYSTEM_DEPENDENCIES@")

include(CMakeFindDependencyMacro)

macro(iceberg_find_dependencies dependencies)
  if(DEFINED CMAKE_MODULE_PATH)
    set(ICEBERG_CMAKE_MODULE_PATH_OLD ${CMAKE_MODULE_PATH})
  else()
    unset(ICEBERG_CMAKE_MODULE_PATH_OLD)
  endif()
  set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

  foreach(dependency ${dependencies})
    find_dependency(${dependency})
  endforeach()

  if(DEFINED ICEBERG_CMAKE_MODULE_PATH_OLD)
    set(CMAKE_MODULE_PATH ${ICEBERG_CMAKE_MODULE_PATH_OLD})
    unset(ICEBERG_CMAKE_MODULE_PATH_OLD)
  else()
    unset(CMAKE_MODULE_PATH)
  endif()
endmacro()

macro(iceberg_find_components components)
  foreach(comp ${components})
    string(TOLOWER "${comp}" _comp_lower_case)
    if(TARGET "Iceberg::iceberg_${_comp_lower_case}_shared" OR
       TARGET "Iceberg::iceberg_${_comp_lower_case}_static")
      set(Iceberg_${comp}_FOUND TRUE)
    else()
      set(Iceberg_${comp}_FOUND FALSE)
      set(Iceberg_NOT_FOUND_MESSAGE "Component ${comp} was not installed")
    endif()
  endforeach()
endmacro()

# Find system dependencies
iceberg_find_dependencies("${ICEBERG_SYSTEM_DEPENDENCIES}")

include("${CMAKE_CURRENT_LIST_DIR}/IcebergTargets.cmake")

# Find required components
iceberg_find_components("${Iceberg_FIND_COMPONENTS}")

check_required_components(Iceberg)
